@page
@inherits Acesoft.Web.UI.RazorPages.WebPage
@{
    ViewData["Title"] = "接入网关";
    Layout = "_shared/body";
}
<div class="container-fluid">
    <div class="pt20 pb10 bd-b-dashed fwb">接入网关 [Acesoft.IotService]：</div>
    <div class="row pt10">
        <div class="col-md-3 text-r">可用/最大工作线程：</div>
        <div class="col-md-3"><span id="workthread"></span></div>
        <div class="col-md-2 text-r">可用/最大端口线程：</div>
        <div class="col-md-4"><span id="portthread"></span></div>
    </div>
    <div class="row pt5">
        <div class="col-md-3 text-r">当前线程数量：</div>
        <div class="col-md-3"><span id="threadcount"></span></div>
        <div class="col-md-2 text-r">CPU使用率/内存：</div>
        <div class="col-md-4"><span id="cpumemory"></span></div>
    </div>
    <div class="pt20 pb10 bd-b-dashed fwb">[Acesoft.IotService.IotServer]：</div>
    <div class="row pt10">
        <div class="col-md-3 text-r">监听地址及端口：</div>
        <div class="col-md-3"><span id="iot_listen"></span></div>
        <div class="col-md-2 text-r">运行状态：</div>
        <div class="col-md-4"><span id="iot_running"></span></div>
    </div>
    <div class="row pt5">
        <div class="col-md-3 text-r">开始运行时间：</div>
        <div class="col-md-3"><span id="iot_starttime"></span></div>
        <div class="col-md-2 text-r">数据采集时间：</div>
        <div class="col-md-4"><span id="iot_collecttime"></span></div>
    </div>
    <div class="row pt5">
        <div class="col-md-3 text-r">允许最大连接数：</div>
        <div class="col-md-3"><span id="iot_maxconn"></span></div>
        <div class="col-md-2 text-r">当前连接总数：</div>
        <div class="col-md-4"><span id="iot_totalconn"></span></div>
    </div>
    <div class="row pt5">
        <div class="col-md-3 text-r">当前数据包总数：</div>
        <div class="col-md-3"><span id="iot_reqcount"></span></div>
        <div class="col-md-2 text-r">每秒处理数据包：</div>
        <div class="col-md-4"><span id="iot_reqspeed"></span></div>
    </div>
    <div class="row pt5">
        <div class="col-md-3 text-r">发送队列总项数：</div>
        <div class="col-md-3"><span id="iot_sendqueues"></span></div>
        <div class="col-md-2 text-r">发送队列当前项数：</div>
        <div class="col-md-4"><span id="iot_availqueues"></span></div>
    </div>
    <div class="pt20 pb10 bd-b-dashed fwb">[Acesoft.IotService.ApiServer]：</div>
    <div class="row pt10">
        <div class="col-md-3 text-r">监听地址及端口：</div>
        <div class="col-md-3"><span id="api_listen"></span></div>
        <div class="col-md-2 text-r">运行状态：</div>
        <div class="col-md-4"><span id="api_running"></span></div>
    </div>
    <div class="row pt5">
        <div class="col-md-3 text-r">开始运行时间：</div>
        <div class="col-md-3"><span id="api_starttime"></span></div>
        <div class="col-md-2 text-r">数据采集时间：</div>
        <div class="col-md-4"><span id="api_collecttime"></span></div>
    </div>
    <div class="row pt5">
        <div class="col-md-3 text-r">允许最大连接数：</div>
        <div class="col-md-3"><span id="api_maxconn"></span></div>
        <div class="col-md-2 text-r">当前连接总数：</div>
        <div class="col-md-4"><span id="api_totalconn"></span></div>
    </div>
    <div class="row pt5">
        <div class="col-md-3 text-r">当前数据包总数：</div>
        <div class="col-md-3"><span id="api_reqcount"></span></div>
        <div class="col-md-2 text-r">每秒处理数据包：</div>
        <div class="col-md-4"><span id="api_reqspeed"></span></div>
    </div>
    <div class="row pt5">
        <div class="col-md-3 text-r">发送队列总项数：</div>
        <div class="col-md-3"><span id="api_sendqueues"></span></div>
        <div class="col-md-2 text-r">发送队列当前项数：</div>
        <div class="col-md-4"><span id="api_availqueues"></span></div>
    </div>
</div>
@section startup { 
    <script>
        function showSize(point) {
            return Number(point / (1024 * 1024)).toFixed(1) + "M";
        }
        function showPercent(point) {
            return Number(point * 100).toFixed(1) + "%";
        }
        function showLabel(value, max) {
            if (value == 0) max = 'default';
            else if (typeof max != 'string') {
                if (value > max * 0.8) max = 'warning';
                else max = 'success';
            }
            return '<span class="label label-' + max + '">' + value + '</span>';
        }
        function showTime(t) {
            if (t == null) return '';
            return AX.datestr(new Date(t), 'yyyy-MM-dd HH:mm:ss');
        }
        function sendCommand(cmd, server) {
            AX.ajax({
                url: AX.api({
                    api: AX.format('iot/{0}server', cmd),
                    q: AX.format('server={0}Server', server)
                }),
                type: 'get',
                cb: AX.ok
            });
        }
        function showState(b, type) {
            if (b) return '<span class="badge">运行中</span>'
                + '<button onclick="' + "sendCommand('stop','" + type + '\')" style="padding:0 10px" class="ml15 btn btn-danger btn-xs">停止</button>'
                + '<button onclick="' + "sendCommand('restart','" + type + '\')" style="padding:0 10px" class="ml10 btn btn-warning btn-xs">重启</button>';
            return '<span class="badge">已停止</span>'
                + '<button onclick="' + "sendCommand('start','" + type + '\')" style="padding:0 10px" class="ml15 pl5 pr5 btn btn-success btn-xs">启动</button>';
        }
        function showValue(name, s, type) {
            $('#' + name + '_listen').html(s.listeners);
            $('#' + name + '_running').html(showState(s.isRunning, type));
            $('#' + name + '_starttime').html(showTime(s.startedTime));
            $('#' + name + '_collecttime').html(showTime(s.collectedTime));
            $('#' + name + '_maxconn').html(showLabel(s.maxConnectionNumber, 'primary'));
            $('#' + name + '_totalconn').html(showLabel(s.totalConnections, s.maxConnectionNumber));
            $('#' + name + '_reqcount').html(showLabel(s.totalHandledRequests, 'success'));
            $('#' + name + '_reqspeed').html(showLabel(s.requestHandlingSpeed, 'success'));
            $('#' + name + '_availqueues').html(showLabel(s.totalSendingQueueItems - s.avialableSendingQueueItems, s.totalSendingQueueItems));
            $('#' + name + '_sendqueues').html(showLabel(s.totalSendingQueueItems, 'primary'));
        }
        let conn = new signalR.HubConnectionBuilder().withUrl('/hubs/iotservice').build();
        conn.on('Send', data => {
            debugger
            if (typeof data == "string") {
                
            }
            else if (data != null) {
                $('#workthread').html(data.availableWorkingThreads + ' / ' + data.maxWorkingThreads);
                $('#portthread').html(data.availableCompletionPortThreads + ' / ' + data.maxCompletionPortThreads);
                $('#threadcount').html(data.totalThreadCount);
                $('#cpumemory').html(showPercent(data.cpuUsage) + ' / ' + showSize(data.memoryUsage));
                showValue("iot", data.instancesStatus[0], "Iot");
                showValue("api", data.instancesStatus[1], "Api");
            }
        });
        conn.start();
    </script>
}