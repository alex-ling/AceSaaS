@page
@inherits Acesoft.Web.UI.RazorPages.WebPage
@{
    ViewData["Title"] = "在线控制";
    Layout = "_shared/back";

    var sbno = App.GetQuery("sbno", "");
}
<div class="pt20 ph15 pb10 bd-b-dashed fwb">设备编号：@sbno</div>
<div class="container-fluid">
    <div class="row">
        <div class="col-xs-4">
            <div class="container-fluid" id="data"></div>
        </div>
        <div class="col-xs-8">
            <div class="container-fluid">
                <div class="row pt15">
                    <div class="col-xs-4">实时上传</div>
                    <div class="col-xs-8">
                        <button class="btn btn-primary btn-sm" onclick="setUpRealTime(1)">开启</button>
                        <button class="btn btn-primary btn-sm" onclick="setUpRealTime(0)">关闭</button>
                    </div>
                </div>
                <div class="row pt10">
                    <div class="col-xs-4">上传频率</div>
                    <div class="col-xs-8">
                        @(Ace.ComboBox().Id("second").Width(80).Items("5,10,15,20,25,30,45,60"))秒
                        <button class="btn btn-primary btn-sm" onclick="setUpInterval()">设置</button>
                    </div>
                </div>
                <div class="row pt10">
                    <div class="col-xs-4">设备开/关机</div>
                    <div class="col-xs-8">
                        <button class="btn btn-primary btn-sm" onclick="setPower(1)">开机</button>
                        <button class="btn btn-primary btn-sm" onclick="setPower(0)">关机</button>
                    </div>
                </div>
                <div class="row pt10">
                    <div class="col-xs-4">设备模式</div>
                    <div class="col-xs-8">
                        @(Ace.ComboBox().Id("mode").Width(80).Items(items =>
                        {
                            items.Add(new ComboItem("0", "自动"));
                            items.Add(new ComboItem("1", "手动"));
                            items.Add(new ComboItem("2", "睡眠"));
                            items.Add(new ComboItem("3", "净化"));
                            items.Add(new ComboItem("4", "强净"));
                            items.Add(new ComboItem("5", "超净"));
                        }))
                        <button class="btn btn-primary btn-sm" onclick="setMode()">设置</button>
                    </div>
                </div>
                <div class="row pt10">
                    <div class="col-xs-4">设置风速档位</div>
                    <div class="col-xs-8">
                        @(Ace.ComboBox().Id("speed").Width(80).Items("1,2,3,4,5,6,7,8"))
                        <button class="btn btn-primary btn-sm" onclick="setSpeed()">设置</button>
                    </div>
                </div>
                <div class="row pt10">
                    <div class="col-xs-4">设置屏幕</div>
                    <div class="col-xs-8">
                        <button class="btn btn-primary btn-sm" onclick="setScreen(0)">息屏</button>
                        <button class="btn btn-primary btn-sm" onclick="setScreen(1)">点亮</button>
                    </div>
                </div>
                <div class="row pt10">
                    <div class="col-xs-4">关机定时</div>
                    <div class="col-xs-8">
                        <button class="btn btn-primary btn-sm" onclick="getPowerOffPlan()">查询</button>
                        @Ace.NumberBox().Id("minutes").Width(40).Prompt("分钟").Min(0).Max(480)
                        <button class="btn btn-primary btn-sm" onclick="setPowerOffPlan()">设置</button>
                    </div>
                </div>
                <div class="row pt10">
                    <div class="col-xs-4">同步网络时间</div>
                    <div class="col-xs-8">
                        <button class="btn btn-primary btn-sm" onclick="setTime()">同步</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section startup { 
    <script>
        var isConnected = false;
        function invoke(c, method, ...args) {
            if (!isConnected) return;
            var argsArray = Array.prototype.slice.call(arguments);
            c.invoke.apply(c, argsArray.slice(1));
        }
        let conn = new signalR.HubConnectionBuilder().withUrl('/hubs/iotdata').build();
        conn.on('Send', msg => {
            var html = '<div class="row pt15">'
                + '<div class="col-xs-6 cr-red">ONLINE</div>'
                + '<div class="col-xs-6 cr-red">' + msg.online + '</div>'
                + '</div>';
            for (var p in msg.values) {
                html += '<div class="row pt10">';
                html += '<div class="col-xs-6">' + p + '</div>';
                html += '<div class="col-xs-6">' + msg.values[p] + '</div>';
                html += '</div>';
            }
            $('#data').html(html);
        });
        conn.start().then(() => {
            isConnected = true;
            invoke(conn, 'Join', '@sbno');
        });

        function cmd(cmd, data, cb) {
            AX.ajax({
                url: AX.api({ api: 'iot/' + cmd }),
                data: $.extend({ sbno: '@sbno' }, data),
                type: 'get',
                cb: cb || AX.ok
            });
        }
        function setUpInterval() {
            var val = $('#second').val();
            if (val != '') {
                cmd('SetUpInterval', { second: val });
            }
        }
        function setUpRealTime(f) {
            cmd('SetUpRealTime', { flag: f });
        }
        function setPower(f) {
            cmd('SetPower', { flag: f });
        }
        function setSpeed() {
            var val = $('#speed').val();
            if (val != '') {
                cmd('SetSpeed', { speed: val });
            }
        }
        function setMode() {
            var val = $('#mode').val();
            if (val != '') {
                cmd('SetMode', { mode: val });
            }
        }
        function setScreen(f) {
            cmd('SetScreen', { flag: f });
        }
        function setTime() {
            cmd('SetTime', {});
        }
        function getPowerOffPlan() {
            cmd('GetPowerOffPlan', {}, function (data) {
                $('#minutes').numberbox('setValue', data.value);
                AX.ok();
            });
        }
        function setPowerOffPlan() {
            var hour = $('#hour').val();
            var min = $('#minutes').val();
            if (hour != '' && min != '') {
                cmd('SetPowerOffPlan', {
                    minutes: min
                });
            }
        }
    </script>
}